---

- name: Ensure Pip is installed.
  package:
    name: python3-pip
    state: present
  become: true

- name: install pip docker
  pip:
    name: docker

### TODO installed but failed
#- name: install pip docker-compose
#  pip:
#    name: docker-compose
#    state: present

# generate keys if they are not set
# TODO: is this OK? could this be done in a simpler way?
- name: generate default master key
  when: HEXAA_BACKEND_MASTERKEY.defaultMasterKey == ""
  shell: "tr -c -d '0123456789abcdefghijklmnopqrstuvwxyz' </dev/urandom | dd bs=40 count=1 2>/dev/null;echo"
  register: DEFAULT_KEY
- name: store default master key
  when: HEXAA_BACKEND_MASTERKEY.defaultMasterKey == ""
  set_fact:
      HEXAA_BACKEND_MASTERKEY: "{{ HEXAA_BACKEND_MASTERKEY | combine({'defaultMasterKey': DEFAULT_KEY.stdout}) }}"


- name: generate secret
  when: HEXAA_BACKEND_SECRET == ""
  shell: "tr -c -d '0123456789abcdefghijklmnopqrstuvwxyz' </dev/urandom | dd bs=32 count=1 2>/dev/null;echo"
  register: SECRET
- name: store secret
  when: HEXAA_BACKEND_SECRET == ""
  set_fact:
      HEXAA_BACKEND_SECRET: "{{ SECRET.stdout }}"

- name: create log dir
  file:
    path: /opt/hexaa/logs/backend
    state: directory
    mode: 0755
    owner: www-data
  register: log_dir
  become: true

- name: create config dir
  file:
    path: /opt/hexaa/config/backend
    state: directory
    mode: 0775
    owner: www-data
    group: hbit
  register: config_dir
  become: true
- name: create site config dir
  file:
    path: "{{ config_dir.path }}/site"
    state: directory
    mode: 0775
    group: hbit
- name: ensure ansible generated
  file:
    path: "{{ config_dir.path }}/00_GENERATED_BY_ANSIBLE"
    state: touch
    mode: 0664
- name: create parameters.yml from template
  template:
    src: parameters.yml.j2
    dest: "{{ config_dir.path }}/site/parameters.yml"
- name: create hexaa_admins.yml from template
  template:
    src: hexaa_admins.yml.j2
    dest: "{{ config_dir.path }}/site/hexaa_admins.yml"
- name: copy default entity ID config
  copy:
    src: files/hexaa_entityids_dist.yml
    dest: "{{ config_dir.path }}/site/hexaa_entityids.yml"
    # do not overwrite existing generated list:
    force: no
  become: true

- name: create nginx config
  tags: [web]
  tempfile:
    state: file
  register: nginx_conf
- name: write nginx config
  tags: [web]
  copy:
    dest: "{{ nginx_conf.path }}"
    src: files/nginx.conf
- name: set nginx config permissions
  tags: [web]
  file:
    path: "{{ nginx_conf.path }}"
    mode: 0644

- name: ensure saml-aa cert exists
  stat:
    path: "{{ SSP_CERT_PATH }}/aa.server.cert.pem"
  register: saml_aa_cert

- name: ensure saml-aa privkey exists
  stat:
    path: "{{ SSP_CERT_PATH }}/aa.server.key.pem"
  register: saml_aa_privkey

- name: debug saml-aa cert exists
  debug:
    msg: "There is no saml-aa cert at {{ SSP_CERT_PATH }}/aa.server.cert.pem"
  when: saml_aa_cert.stat.exists == False

- name: debug saml-aa privkey exists
  debug:
    msg: "There is no saml-aa privkey at {{ SSP_CERT_PATH }}/aa.server.key.pem"
  when: saml_aa_privkey.stat.exists == False

- name: fail saml-aa ssl
  fail:
    msg: "Fail saml-aa ssl configs see above"
  when: saml_aa_privkey.stat.exists == False or saml_aa_cert.stat.exists == False

- name: create masterkey hook dir
  file:
    path: "{{ config_dir.path }}/hooks"
    state: directory
    mode: 0775
- name: copy masterkey hooks
  copy:
    src: "files/{{ HEXAA_BACKEND_HOOK_DIR }}/"
    dest: "{{ config_dir.path }}/hooks"
    group: hbit
    mode: 0664
  when: HEXAA_BACKEND_HOOK_DIR != ""
